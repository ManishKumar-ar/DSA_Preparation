#include <iostream>
using namespace std;

int main()
{
    int A[5][5] =
        {{0, 0, 0, 0, 0}, {0, 0, 3, 32767, 7}, {0, 8, 0, 2, 32767}, {0, 5, 32767, 0, 1}, {0, 2, 32767, 32767, 0}};
    int totalvertices = 4;

    for (int k = 1; k <= totalvertices; k++)
    {
        for (int i = 1; i <= totalvertices; i++)
        {
            for (int j = 1; j <= totalvertices; j++)
            {
                if (A[i][j] > (A[i][k] + A[k][j]))
                {
                    A[i][j] = A[i][k] + A[k][j];
                }
            }
        }
    }

    // Now, the matrix A contains the shortest path distances between all pairs of vertices.

    // Display the result
    for (int i = 1; i <= totalvertices; i++)
    {
        for (int j = 1; j <= totalvertices; j++)
        {
            cout << A[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}


///output ---

0 3 5 6 
5 0 2 3 
3 6 0 1 
2 5 7 0 
